/*overall caller*/
program topdog
	version 12.1
	set seed 7
	set more off
	*set trace on
	*set tracedepth 1
	
	/*INPUTS-general*/
	/*level*/
	scalar clvl=95
	qui set level `=clvl'
	/*number of simulations*/
	scalar simnum=10
	/*total size of cases (patients)*/
	scalar totalsize=5000
	/*number of studies*/
	scalar studynum=20
	/*minimum size of study*/
	scalar minsize=50
	scalar meansize=totalsize/studynum
	/*proportion of the intervention group*/
	scalar caseprob=0.5
	/*INPUTS-specific*/
	/*binary outcome?*/
	scalar binout=0
	/*model type 1=regress 2=xtreg 3+=xtmixed*/
	scalar modtp=5
	/*INPUT-parameters*/
	/*betas*/
	scalar b0=5
	scalar b1=0.5
	scalar b2=0.3
	scalar b3=0.1
	/*within-study SD and its SD (outcome)*/
	scalar mnsd=5
	scalar cdsd=0.5
	/*heterogeneity*/
	scalar tausq0=0
	scalar tausq1=0
	scalar tausq2=0
	scalar tausq3=0
	/*distribution of random effects info*/
	scalar dtype0=0
	scalar dtype1=0
	scalar dtype2=0
	scalar dtype3=0
	/*distribution for errors (and hence outcome)*/
	scalar dtype4=0
	/*INPUT-covariate*/
	/*continuous covariate (yes=1)*/
	scalar cncov=1
	/*study-level covariate (yes=1)*/
	scalar slcov=0		
	/*distribution for covariate*/
	scalar dtype5=0	
	/*mean and sd for covariate*/
	/*needs to be centred since we include as an interaction! if not centred the main effect is off and not interpretable*/
	/*sd needs to be 1. if >1 then power calculations return very high power*/
	scalar covmn=0	
	scalar covsd=1
	
	/*HETEROGENEITY*/
	/*pool within variance across studies - using the true mean value rather than an estimate
	i.e. modelling using how much heterogeneity there should be not how much you measure in your dataset*/
	scalar poolwithinvar = mnsd^2
	/*heterogeneity for intercept(0), main(1), baseline(2) and interaction(3) effect*/
	forvalues x=0(1)3 {
		if tausq`x'==. {
			if Hsq`x'!=. {	/*H^2M in the [0,+inf) range*/
				scalar tausq`x'=(Hsq`x'+1)*poolwithinvar - poolwithinvar
			}
			if Isq`x'!=. {	/*I^2 in the [0,100) range*/
				scalar tausq`x'=(Isq`x'*poolwithinvar)/(100-Isq`x')
			}
		}
	}
	
	/*MAIN BIT*/
	/*not using matrices for results to avoid the IC limit of 400*/
	forvalues i=1(1)15 {
		scalar c`i'=0		
	}
	forvalues i=0(1)3 {
		scalar powb`i'=0
		scalar covb`i'=0
	}
	/*loop number of simulations*/
	scalar cntr=0
	forvalues i=1(1)`=simnum' {
		/*get basics*/
		studybasics `=totalsize' `=studynum' `=minsize' `=caseprob'
		/*continuous outcome - continuous covariate*/
		if binout==0 & cncov==1 {
			/*call data generation*/		
			modout1 `=b0' `=b1' `=b2' `=b3' `=mnsd' `=cdsd' `=tausq0' `=tausq1' `=tausq2' `=tausq3' /*
			*/ `=dtype0' `=dtype1' `=dtype2' `=dtype3' `=slcov' `=totalsize' `=dtype4' `=dtype5' `=covmn' `=covsd'
			/*call modelling*/
			model`=modtp'
			
		}
		/*if successful convergence - for basic models there's not question*/
		if r(conv)==1 {
			/*mean coefficients*/
			scalar c1 = c1+r(tc1)
			scalar c4 = c4+r(tc4)
			scalar c7 = c7+r(tc7)
			scalar c10 = c10+r(tc10)
			scalar c13 = c13+r(tc13)
			scalar c14 = c14+r(tc14)
			scalar c15 = c15+r(tc15)
			/*POWER - but only when the observed effect has the same direction as the in model*/
			/*intervention effect (main)*/
			if r(tc3)<=(100-clvl)/100 & r(tc1)*b1>0 {
				scalar powb1=powb1+1
			}
			/*covariate effect (main)*/
			if r(tc6)<=(100-clvl)/100 & r(tc4)*b2>0 {
				scalar powb2=powb2+1
			}
			/*interaction effect*/
			if r(tc9)<=(100-clvl)/100 & r(tc7)*b3>0 {
				scalar powb3=powb3+1
			}
			/*intercept*/
			if r(tc12)<=(100-clvl)/100 & r(tc10)*b0>0 {
				scalar powb0=powb0+1
			}
			/*COVERAGE*/
			/*intervention effect (main)*/
			if (r(tc1)-invnormal(`=1-(1-clvl/100)/2')*r(tc2))<=b1 & b1<=(r(tc1)+invnormal(`=1-(1-clvl/100)/2')*r(tc2)){
				scalar covb1=covb1+1
			}
			/*covariate effect (main)*/
			if (r(tc4)-invnormal(`=1-(1-clvl/100)/2')*r(tc5))<=b2 & b2<=(r(tc4)+invnormal(`=1-(1-clvl/100)/2')*r(tc5)){
				scalar covb2=covb2+1
			}
			/*interaction effect*/
			if (r(tc7)-invnormal(`=1-(1-clvl/100)/2')*r(tc8))<=b3 & b3<=(r(tc7)+invnormal(`=1-(1-clvl/100)/2')*r(tc8)){
				scalar covb3=covb3+1
			}
			/*intercept*/
			if (r(tc10)-invnormal(`=1-(1-clvl/100)/2')*r(tc11))<=b0 & b0<=(r(tc10)+invnormal(`=1-(1-clvl/100)/2')*r(tc11)){
				scalar covb0=covb0+1
			}
			
			/*overall counter*/
			scalar cntr=cntr+1
		}
		/*display progress*/
		if r(conv)==1 {
			di "." _continue
		}
		else {
			di "x" _continue
		}
		if mod(`i',50)==0 {
			di "`i'"
		}
		else if `i'==simnum {
			di "`i'"
		}
	}
	/*calculations*/
	forvalues i=0(1)3 {
		/*power*/
		qui cii cntr powb`i'
		scalar lpowb`i'=100*r(lb)
		scalar upowb`i'=100*r(ub)	
		scalar powb`i'= 100*powb`i'/cntr
		/*coverage*/
		qui cii cntr covb`i'
		scalar lcovb`i'=100*r(lb)
		scalar ucovb`i'=100*r(ub)	
		scalar covb`i'= 100*covb`i'/cntr
	}
	/*if covariate not calculated set everything to missing*/
	if c4==. {
		foreach x in lpowb2 upowb2 powb2 lcovb2 ucovb2 covb2 {
			scalar `x'=.
		}
	}

	/*display outputs*/
	di _newline(2) in green "# of converging runs: " %6.0f `=cntr'
	di in green "mean coefficients"
	di in yellow _col(3) "intervetion:" _col(20) %5.3f `=c1/cntr'
	di in yellow _col(3) "covariate:" _col(20) %5.3f `=c4/cntr'
	di in yellow _col(3) "interaction:" _col(20) %5.3f `=c7/cntr'
	di in yellow _col(3) "intercept:" _col(20) %5.3f `=c10/cntr'
	di in yellow _col(3) "within-var:" _col(20) %5.3f `=c13/cntr'
	di in yellow _col(3) "b-var(_cons):" _col(20) %5.3f `=c14/cntr'
	di in yellow _col(3) "b-var(grp):" _col(20) %5.3f `=c15/cntr'
	di in green "power to detect effects"
	di in yellow _col(3) "intervetion:" _col(20) %3.1f powb1 "(" %3.1f lpowb1 "-" %3.1f upowb1 ")"
	di in yellow _col(3) "covariate:" _col(20) %3.1f powb2 "(" %3.1f lpowb2 "-" %3.1f upowb2 ")"
	di in yellow _col(3) "interaction:" _col(20) %3.1f powb3 "(" %3.1f lpowb3 "-" %3.1f upowb3 ")"
	di in yellow _col(3) "intercept:" _col(20) %3.1f powb0 "(" %3.1f lpowb0 "-" %3.1f upowb0 ")"
	di in green "coverage for effects (reported CI includes model beta)"
	di in yellow _col(3) "intervetion:" _col(20) %3.1f covb1 "(" %3.1f lcovb1 "-" %3.1f ucovb1 ")"
	di in yellow _col(3) "covariate:" _col(20) %3.1f covb2 "(" %3.1f lcovb2 "-" %3.1f ucovb2 ")"
	di in yellow _col(3) "interaction:" _col(20) %3.1f covb3 "(" %3.1f lcovb3 "-" %3.1f ucovb3 ")"
	di in yellow _col(3) "intercept:" _col(20) %3.1f covb0 "(" %3.1f lcovb0 "-" %3.1f ucovb0 ")"
	
end 
