/*continuous outcome - continuous covariate*/	
program modout1
	/*inputs*/
	scalar b0=`1'
	scalar b1=`2'
	scalar b2=`3'
	scalar b3=`4'
	scalar mnsd=`5'
	scalar cdsd=`6'
	scalar tausq0=`7'
	scalar tausq1=`8'
	scalar tausq2=`9'
	scalar tausq3=`10'
	scalar dtype0=`11'
	scalar dtype1=`12'
	scalar dtype2=`13'
	scalar dtype3=`14'
	scalar slcov=`15'
	scalar totnum=`16'
	scalar dtype4=`17'
	scalar dtype5=`18'
	scalar covmn=`19'
	scalar covsd=`20'
	
	/*study level covariate*/
	if slcov==1 {
		qui gen contcov=.
		forvalues i=1(1)`=studynum' {
			/*if normally distributed*/
			if dtype5==0 {
				scalar temp = rnormal(`=covmn',`=covsd')
				qui replace contcov = temp if studyid==`i'
			}
			else {			
				ramberg dtype5
				qui replace contcov = covmn + r(rb)*covsd if studyid==`i'
			}
		}	
	}
	/*patient-level covariate*/
	else {
		/*if normally distributed*/
		if dtype5==0 {
			qui gen contcov = rnormal(`=covmn',`=covsd')
		}
		else {
			rambergvar dtype5 Rb2
			qui gen contcov = covmn + Rb2*covsd
			qui drop Rb2
		}
	}
	
	/*calculate observation error using study SD*/
	qui gen errx=.
	/*if normally distributed*/
	if dtype4==0 {
		qui gen Rb2=rnormal(0,1) 	
	}
	else {
		rambergvar dtype4 Rb2
	}
	/*rescale error according to study variance*/			
	forvalues i=1(1)`=studynum'{ 
		/*within study variance*/
		scalar withinsd`i' = rnormal(mnsd,cdsd) 
		/*limit to positive by resampling - which will affect the mean if part of the tail is negative*/
		while withinsd`i'<=0 {
			scalar withinsd`i' = rnormal(mnsd,sdsd) 
		}
		/*rescaled error - e taken from N(0,s^2)*/
        qui replace errx = Rb2*withinsd`i' if studyid==`i'
	}
	qui drop Rb2

	/*distribution intercept(0), main(1), baseline(2) and interaction(3) effect*/
	forvalues x=0(1)3 {
		/*random-effects*/
		if tausq`x'==0 {
			qui gen u`x'=0
		}
		else {
			qui gen u`x'=.
			/*draw for each study*/
			forvalues i=1(1)`=studynum'{
				/*call Ramberg method*/
				ramberg dtype`x'
				scalar Rb`x'=r(rb)
				/*rescale and add*/
				qui replace u`x' = Rb`x'*sqrt(tausq`x') if studyid==`i'
			}	
		}
	}	
	
	/*generate outcome for each study*/
	qui gen outcome= b0 + b1*grp + b2*contcov + b3*contcov*grp + u0 + u1*grp + u2*contcov + u3*contcov*grp + errx	
	qui compress			
end
